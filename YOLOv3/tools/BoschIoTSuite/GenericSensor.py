# // Generated by Vorto from com.bosch.iot.suite.example.octopussuiteedition.GenericSensor

class GenericSensor(object):
    def __init__(self):
        self.sensorValue = 0.0
        self.sensorUnits = 0.0
        self.lastValueDate = 0.0
        self.lastValueTime = 0.0

    ### Status property sensorValue
    @property
    def sensorValue(self):
        return self.__sensorValue[0]
    
    @sensorValue.setter
    def sensorValue(self, value):
        self.__sensorValue = (value, True)
    
    ### Status property sensorUnits
    @property
    def sensorUnits(self):
        return self.__sensorUnits[0]
    
    @sensorUnits.setter
    def sensorUnits(self, value):
        self.__sensorUnits = (value, True)
    
    ### Status property lastValueDate
    @property
    def lastValueDate(self):
        return self.__lastValueDate[0]
    
    @lastValueDate.setter
    def lastValueDate(self, value):
        self.__lastValueDate = (value, True)
   
    ### Status property lastValueTime
    @property
    def lastValueTime(self):
        return self.__lastValueTime[0]
    
    @lastValueTime.setter
    def lastValueTime(self, value):
        self.__lastValueTime = (value, True)    
    
    def serializeStatus(self, serializer):
        serializer.first_prop = True
        if self.__sensorValue[1]:
               serializer.serialize_property("sensorValue", self.__sensorValue[0])
               self.__sensorValue = (self.__sensorValue[0], False)
        if self.__sensorUnits[1]:
               serializer.serialize_property("sensorUnits", self.__sensorUnits[0])
               self.__sensorUnits = (self.__sensorUnits[0], False)
        if self.__lastValueDate[1]:
               serializer.serialize_property("lastValueDate", self.__lastValueDate[0])
               self.__lastValueDate = (self.__lastValueDate[0], False)
        if self.__lastValueTime[1]:
               serializer.serialize_property("lastValueTime", self.__lastValueTime[0])
               self.__lastValueTime = (self.__lastValueTime[0], False)
    def serializeConfiguration(self, serializer):
        pass
        #serializer.first_prop = True
        #if self.__applicationType[1]:
        #       serializer.serialize_property("applicationType", self.__applicationType[0])
        #       self.__applicationType = (self.__applicationType[0], False)
